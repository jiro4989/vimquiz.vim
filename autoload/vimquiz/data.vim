" クイズのデータを追加する場合はここにデータを追加する。
let s:datas = [
      \ {'q':'Q. ノーマルモードで左に移動する際に使用するキーを答えよ', 'a':'h'}
      \ , {'q':'Q. ノーマルモードで下に移動する際に使用するキーを答えよ', 'a':'j'}
      \ , {'q':'Q. ノーマルモードで上に移動する際に使用するキーを答えよ', 'a':'k'}
      \ , {'q':'Q. ノーマルモードで右に移動する際に使用するキーを答えよ', 'a':'l'}
      \ , {'q':'Q. ノーマルモードからインサートモードに移行する際に使用するキーを答えよ', 'a':'i'}
      \ , {'q':'Q. ノーマルモードからヴィジュアルモードに移行する際に使用するキーを答えよ', 'a':'v'}
      \ , {'q':'Q. ノーマルモードからコマンドモードに移行する際に使用するキーを答えよ', 'a':':'}
      \ , {'q':'Q. ノーマルモードで、行末までカーソルを移動するキーを答えよ', 'a':'$'}
      \ , {'q':'Q. ノーマルモードで、行頭(インデント無視)までカーソルを移動するキーを答えよ', 'a':'0'}
      \ , {'q':'Q. ノーマルモードで、行頭(インデントまで)までカーソルを移動するキーを答えよ', 'a':'^'}
      \ , {'q':'Q. バッファの内容を上書き保存して閉じるコマンドを入力せよ', 'a':':wq'}
      \ , {'q':'Q. バッファの内容を上書き保存するコマンドを入力せよ', 'a':':w'}
      \ ]

" 引数の数値分だけランダムに問題データを返却する。
"
" NOTE:
" 乱数生成に関してはVimが標準で対応していないので、現在時刻を利用して適当
" な値を取得する。現在時刻の数値からN個のデータを取得して返却する。
function! vimquiz#data#get_datas(n) abort
  let l:list = []
  let l:now = localtime()
  for l:i in range(l:now, l:now + a:n - 1)
    let l:mod = l:i % len(s:datas)
    call add(l:list, s:datas[l:mod])
  endfor
  return l:list
endfunction
